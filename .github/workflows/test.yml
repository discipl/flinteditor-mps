name: Tests
on:
  pull_request:
    branches:
      - master

jobs:
  build:
    env:
      DISPLAY: :0
    strategy:
      matrix:
        os: [ ubuntu-16.04, macos-latest, windows-latest ]
    name: Run Tests
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Check java
        run: java --version
      - name: Setup xvfb (Linux)
        if: ${{ matrix.os == 'ubuntu-16.04' }}
        run: |
          sudo apt-get install -y xvfb
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
      - uses: burrunan/gradle-cache-action@v1
        name: Test
        with:
          job-id: jdk11
          arguments: --no-parallel initProject test
          gradle-version: wrapper
      - name: Tests failed
        if: ${{ matrix.os == 'ubuntu-16.04' && failure() }}
        run: sudo apt-get install lynx && if [ -f ./code/build/reports/html/junit-noframes.html ]; then lynx -dump ./code/build/reports/html/junit-noframes.html; fi && if [ -f ./code/java/FlintParser/build/reports/tests/test/index.html ]; then lynx -dump ./code/java/FlintParser/build/reports/tests/test/index.html; fi && if [ -f ./code/java/FlintParser/build/reports/tests/test/classes/org.discipl.flint.flintfiller.FlintFillerTest.html ]; then lynx -dump ./code/java/FlintParser/build/reports/tests/test/classes/org.discipl.flint.flintfiller.FlintFillerTest.html; fi
      - name: Upload Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.os }}
          path: code/java/FlintParser/build/reports/tests/test
