plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
}

group 'org.discipl'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.gsonfire:gson-fire:1.8.4'

    implementation "org.openjfx:javafx-base:$javafx_version:$current_platform"
    implementation "org.openjfx:javafx-controls:$javafx_version:$current_platform"
    implementation "org.openjfx:javafx-graphics:$javafx_version:$current_platform"
    implementation "org.openjfx:javafx-media:$javafx_version:$current_platform"
    implementation "org.openjfx:javafx-swing:$javafx_version:$current_platform"
    implementation "org.openjfx:javafx-web:$javafx_version:$current_platform"

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-exec:1.3'

    implementation 'org.apache.jena:jena-arq:4.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

ext {
    path_with_space = new File(buildDir, "path with space")
}

test {
    environment "FLINT_FILLER_DIR", flint_filler_executables_dir.path
    environment "FLINT_FILLER_WITH_SPACE", path_with_space.path
    environment "FLINT_FILLER_OUTPUT_DIR", new File(buildDir, "tmp").path
    environment "FLINT_FILLER_TEST_FILE", new File(projectDir, "src/test/resources/flint-filler-test-file.xml").path
    useJUnitPlatform()
}

if (!new File(flint_filler_executables_dir, "flintfiller-linux").exists()) {
    tasks.getByName("test").dependsOn ":fetchFlintFillerExecutables"
}

task copyToPathWithSpace() {
    tasks.getByName("test").dependsOn "copyToPathWithSpace"
    mustRunAfter(":fetchFlintFillerExecutables")
    flint_filler_executables_dir.mkdirs()
    path_with_space.mkdirs()
    doLast {
        copy {
            flint_filler_executables_dir.eachFile {
                if (it.isFile()) {
                    from it
                }
            }
            into path_with_space
        }
    }
}
